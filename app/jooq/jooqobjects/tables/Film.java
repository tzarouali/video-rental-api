/*
 * This file is generated by jOOQ.
*/
package jooq.jooqobjects.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import jooq.jooqobjects.Keys;
import jooq.jooqobjects.VideoRentalSchema;
import jooq.jooqobjects.tables.records.FilmRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Film extends TableImpl<FilmRecord> {

    private static final long serialVersionUID = 1375526017;

    /**
     * The reference instance of <code>video_rental_schema.film</code>
     */
    public static final Film FILM = new Film();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<FilmRecord> getRecordType() {
        return FilmRecord.class;
    }

    /**
     * The column <code>video_rental_schema.film.id</code>.
     */
    public final TableField<FilmRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('video_rental_schema.film_id_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>video_rental_schema.film.name</code>.
     */
    public final TableField<FilmRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>video_rental_schema.film.film_type_id</code>.
     */
    public final TableField<FilmRecord, Integer> FILM_TYPE_ID = createField("film_type_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>video_rental_schema.film</code> table reference
     */
    public Film() {
        this("film", null);
    }

    /**
     * Create an aliased <code>video_rental_schema.film</code> table reference
     */
    public Film(String alias) {
        this(alias, FILM);
    }

    private Film(String alias, Table<FilmRecord> aliased) {
        this(alias, aliased, null);
    }

    private Film(String alias, Table<FilmRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return VideoRentalSchema.VIDEO_RENTAL_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<FilmRecord, Integer> getIdentity() {
        return Keys.IDENTITY_FILM;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<FilmRecord> getPrimaryKey() {
        return Keys.FILM_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<FilmRecord>> getKeys() {
        return Arrays.<UniqueKey<FilmRecord>>asList(Keys.FILM_PKEY, Keys.FILM_NAME_KEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<FilmRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<FilmRecord, ?>>asList(Keys.FILM__FILM_FILM_TYPE_ID_FKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Film as(String alias) {
        return new Film(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Film rename(String name) {
        return new Film(name, null);
    }
}
