/*
 * This file is generated by jOOQ.
*/
package jooq.jooqobjects.tables.records;


import java.math.BigDecimal;

import javax.annotation.Generated;

import jooq.jooqobjects.tables.Customer;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CustomerRecord extends UpdatableRecordImpl<CustomerRecord> implements Record4<String, String, Integer, BigDecimal> {

    private static final long serialVersionUID = -1044801498;

    /**
     * Setter for <code>video_rental_schema.customer.code</code>.
     */
    public void setCode(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>video_rental_schema.customer.code</code>.
     */
    public String getCode() {
        return (String) get(0);
    }

    /**
     * Setter for <code>video_rental_schema.customer.name</code>.
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>video_rental_schema.customer.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>video_rental_schema.customer.bonus_points</code>.
     */
    public void setBonusPoints(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>video_rental_schema.customer.bonus_points</code>.
     */
    public Integer getBonusPoints() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>video_rental_schema.customer.available_money</code>.
     */
    public void setAvailableMoney(BigDecimal value) {
        set(3, value);
    }

    /**
     * Getter for <code>video_rental_schema.customer.available_money</code>.
     */
    public BigDecimal getAvailableMoney() {
        return (BigDecimal) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<String, String, Integer, BigDecimal> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<String, String, Integer, BigDecimal> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return Customer.CUSTOMER.CODE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Customer.CUSTOMER.NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return Customer.CUSTOMER.BONUS_POINTS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<BigDecimal> field4() {
        return Customer.CUSTOMER.AVAILABLE_MONEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getBonusPoints();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal value4() {
        return getAvailableMoney();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CustomerRecord value1(String value) {
        setCode(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CustomerRecord value2(String value) {
        setName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CustomerRecord value3(Integer value) {
        setBonusPoints(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CustomerRecord value4(BigDecimal value) {
        setAvailableMoney(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CustomerRecord values(String value1, String value2, Integer value3, BigDecimal value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CustomerRecord
     */
    public CustomerRecord() {
        super(Customer.CUSTOMER);
    }

    /**
     * Create a detached, initialised CustomerRecord
     */
    public CustomerRecord(String code, String name, Integer bonusPoints, BigDecimal availableMoney) {
        super(Customer.CUSTOMER);

        set(0, code);
        set(1, name);
        set(2, bonusPoints);
        set(3, availableMoney);
    }
}
